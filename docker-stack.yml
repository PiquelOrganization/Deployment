services:
  traefik:
    image: traefik:v3.3
    command:
      # Basic setup
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"

      # Setup certs
      - "--certificatesresolvers.piquel-resolver.acme.tlschallenge=true"
      - "--certificatesresolvers.piquel-resolver.acme.email=${VPS_USER_EMAIL}"
      - "--certificatesresolvers.piquel-resolver.acme.storage=/letsencrypt/acme.json"

      # piquel-fr entrypoints
      - "--entrypoints.piquel-fr-secure.address=${HOST}:443"
      - "--entrypoints.piquel-fr.address=${HOST}:80"
      - "--entrypoints.piquel-fr.http.redirections.entrypoint.to=piquel-fr-secure"
      - "--entrypoints.piquel-fr.http.redirections.entrypoint.scheme=https"
      # PostgreSQL entrypoint
      - "--entrypoints.postgres.address=${DB_HOST}:5432"
      # pgAdmin
      - "--entrypoints.pgadmin-secure.address=${PGADMIN_HOST}:443"
      - "--entrypoints.pgadmin.address=${PGADMIN_HOST}:80"
      - "--entrypoints.pgadmin.http.redirections.entrypoint.to=pgadmin-secure"
      - "--entrypoints.pgadmin.http.redirections.entrypoint.scheme=https"
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
      - mode: host
        protocol: tcp
        published: 5432
        target: 5432
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - piquel-network
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: piquel-fr
      POSTGRES_USER: ${DB_ADMIN_USER}
      POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.postgres.loadbalancer.server.port=5432"
      - "traefik.http.routers.postgres.rule=Host(`${DB_HOST}`)"
      - "traefik.http.routers.postgres.entrypoints=postgres"
      - "traefik.http.routers.postgres.tls.certresolver=piquel-resolver"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - piquel-network
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.pgadmin.rule=Host(`${PGADMIN_HOST}`)"
      - "traefik.http.routers.pgadmin.entrypoints=pgadmin-secure"
      - "traefik.http.routers.pgadmin.tls.certresolver=piquel-resolver"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - piquel-network
  # satisfactory:
  #   image: wolveix/satisfactory-server:latest
  #   container_name: satisfactory
  #   ports:
  #       - '7777:7777/udp'
  #       - '7777:7777/tcp'
  #   volumes:
  #       - '${DATA_PATH}/satisfactory:/config'
  #   environment:
  #       - MAXPLAYERS=4
  #       - PGID=1000
  #       - PUID=1000
  #       - ROOTLESS=false
  #       - STEAMBETA=false

volumes:
  #data: ${DATA_PATH}
  postgres:
  pgadmin:
  letsencrypt:

networks:
  piquel-network:
    driver: overlay
    attachable: true
    name: piquel-network
