services:
  traefik:
    image: traefik:v3.3
    command:
      # Basic setup
      - "--api=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=piquel-network"

      # Setup certs
      - "--certificatesresolvers.piquel-resolver.acme.tlschallenge=true"
      - "--certificatesresolvers.piquel-resolver.acme.email=${VPS_USER_EMAIL}"
      - "--certificatesresolvers.piquel-resolver.acme.storage=/letsencrypt/acme.json"

      # piquel-fr entrypoints
      - "--entrypoints.piquel-https.address=:443"

      - "--entrypoints.piquel-http.address=:80"
      - "--entrypoints.piquel-http.http.redirections.entrypoint.to=piquel-https"
      - "--entrypoints.piquel-http.http.redirections.entrypoint.scheme=https"
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST}`)"
    #   - "traefik.http.routers.traefik.service=api@internal"
    #   - "traefik.http.routers.traefik.entrypoints=piquel-https"
    #   - "traefik.http.routers.traefik.tls.certresolver=piquel-resolver"
    #   - "traefik.http.middlewares.piquel-auth.basicauth.users=${TRAEFIK_AUTH}"
    #   - "traefik.http.routers.traefik.middlewares=piquel-auth@docker"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - piquel-network
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: piquel-fr
      POSTGRES_USER: ${DB_ADMIN_USER}
      POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - piquel-network
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.pgadmin.rule=Host(`${PGADMIN_HOST}`)"
      - "traefik.http.routers.pgadmin.entrypoints=piquel-https"
      - "traefik.http.routers.pgadmin.tls.certresolver=piquel-resolver"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - piquel-network
  dms:
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    container_name: dms
    hostname: ${MAIL_HOST}
    env_file: ./configs/mailserver.env
    # environment:
    #   SSL_TYPE: letsencrypt
    #   SSL_DOMAIN: ${MAIL_HOST}
    ports:
      - "25:25"    # SMTP  (explicit TLS => STARTTLS, Authentication is DISABLED => use port 465/587 instead)
      - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
      - "465:465"  # ESMTP (implicit TLS)
      - "587:587"  # ESMTP (explicit TLS => STARTTLS)
      - "993:993"  # IMAP4 (implicit TLS)
    volumes:
      - dms-data:/var/mail/
      - dms-state:/var/mail-state/
      - dms-logs:/var/log/mail/
      - dms-config:/tmp/docker-mailserver/
      - letsencrypt:/etc/letsencrypt
      - /etc/localtime:/etc/localtime:ro
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: "ss --listening --ipv4 --tcp | grep --silent ':smtp' || exit 1"
      timeout: 3s
      retries: 0
    networks:
      - piquel-network
  whoami:
    image: docker.io/traefik/whoami:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${MAIL_HOST}`)"
      - "traefik.http.routers.whoami.tls.certresolver=piquel-resolver"
    networks:
      - piquel-network

volumes:
  postgres:
  pgadmin:
  letsencrypt:

  dms-data:
  dms-state:
  dms-logs:
  dms-config:

networks:
  piquel-network:
    driver: overlay
    attachable: true
    name: piquel-network
